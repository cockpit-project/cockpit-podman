#!/bin/sh
# image-customize script to enable cockpit in test VMs
set -eu

# for Debian based images, build and install debs; for RPM based ones, the locally built rpm gets installed separately
if [ -d /var/tmp/debian ]; then
    apt-get update
    eatmydata apt-get install -y cockpit-ws cockpit-system podman

    # HACK: starting podman.service complains about missing crun: https://bugs.debian.org/961016
    eatmydata apt-get install -y crun

    # HACK: deb is not yet shipping the REST and user units: https://bugs.debian.org/966118
    (cd /lib/systemd/system
     curl -O https://raw.githubusercontent.com/containers/podman/master/contrib/systemd/system/podman.service
     curl -O https://raw.githubusercontent.com/containers/podman/master/contrib/systemd/system/podman.socket
     ln -s ../system/podman.service /lib/systemd/user/podman.service
     ln -s ../system/podman.socket /lib/systemd/user/podman.socket)

    # build source package
    cd /var/tmp
    TAR=$(ls cockpit-podman-*.tar.gz)
    VERSION="${TAR#cockpit-podman-}"
    VERSION="${VERSION%.tar.gz}"
    ln -s $TAR cockpit-podman_${VERSION}.orig.tar.gz
    tar xf "$TAR"
    cd cockpit-podman
    cp -r ../debian .
    sed -i "s/(0-1)/(${VERSION}-1)/" debian/changelog
    dpkg-buildpackage -S -us -uc -nc
    cd ..

    # build and install binary package
    pbuilder build --buildresult . *.dsc
    dpkg -i *.deb

    # Debian does not enable user namespaces by default
    echo kernel.unprivileged_userns_clone = 1 > /etc/sysctl.d/00-local-userns.conf
    systemctl restart systemd-sysctl

    # disable services that get in the way of /var/lib/containers
    systemctl disable docker.service io.podman.service
fi

# HACK: avoid leaking processes with podman < 2.0.4; see https://github.com/containers/podman/commit/2b6dd3fb4384
sed -i '/KillMode=process/d; s/Type=oneshot/Type=simple/' /lib/systemd/user/podman.service /lib/systemd/system/podman.service

systemctl enable cockpit.socket

# don't force https:// (self-signed cert)
printf "[WebService]\\nAllowUnencrypted=true\\n" > /etc/cockpit/cockpit.conf

if type firewall-cmd >/dev/null 2>&1; then
    firewall-cmd --add-service=cockpit --permanent
fi

# grab a few images to play with; tests run offline, so they cannot download images
podman pull docker.io/busybox
podman pull docker.io/alpine
podman pull docker.io/registry:2

# pull images for user podman tests; podman insists on user session
loginctl enable-linger $(id -u admin)
sudo -i -u admin bash << EOF
systemctl --user disable --now systemd-tmpfiles-clean.timer
podman pull docker.io/busybox
podman pull docker.io/alpine
podman pull docker.io/registry:2
EOF
loginctl disable-linger $(id -u admin)

# HACK: See https://github.com/cockpit-project/cockpit/issues/14133
mkdir -p /usr/share/cockpit/packagekit

# 15minutes after boot tmp files are removed and podman stores some tmp lock files
systemctl disable --now systemd-tmpfiles-clean.timer
