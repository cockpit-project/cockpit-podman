@use "ct-card.scss";
@use "page.scss";
@import "global-variables";
// For pf-line-clamp
@import "@patternfly/patternfly/sass-utilities/mixins.scss";

#app .pf-c-card.containers-containers, #app .pf-c-card.containers-images {
    @extend .ct-card;
}

#containers-images, #containers-containers {
    // Decrease padding for the image/container toggle button list
    .pf-c-table.pf-m-compact .pf-c-table__toggle {
        padding-left: 0px;
    }
}

@media screen and (max-width: 768px) {
    // Badges should not stretch in mobile mode
    .pf-c-table [data-label] > .pf-c-badge {
        justify-self: start;
    }
}

.container-block {
    display: flex;
    flex-direction: column;
}

.container-block small {
    @include pf-line-clamp("1");
    color: var(--pf-global--Color--200);
}

.container-name {
    font-size: var(--pf-global--FontSize--lg);
    font-weight: 400;
}

.containers-run-onbuildvarclaim input {
    max-width: 15em;
}

.pf-c-alert__description {
    overflow-wrap: anywhere;
}

.listing-action {
    width: 100%;
    display: flex;
    justify-content: space-around;
}

.ct-badge-container-running, .ct-badge-pod-running {
  background-color: var(--pf-global--info-color--100);
  color: white;
}

// Hide the header nav from the expandable rows - this should be better done with JS but the current cockpit-listing-panel implementation does not support this variant
#containers-images .ct-listing-panel-head {
    display: none;
}

.ct-grey-text {
   color: var(--pf-global--Color--200);
}

// Add  borders to no pod containers list and images list
.container-section.pf-m-plain tbody,
.containers-images tbody {
    border: var(--pf-c-card--m-flat--BorderWidth) solid var(--pf-c-card--m-flat--BorderColor);
}

.content-action {
    text-align: right;
    white-space: nowrap !important;
}

@media ( max-width: $pf-global--breakpoint--md - 1 ) {
    .show-only-when-wide {
        display: none;
    }
}

@media ( min-width: $pf-global--breakpoint--md ) {
    .show-only-when-narrow {
        display: none;
    }

    // FIXME: Move this into PF JSX where possible;
    // otherwise add classes to the elements and update whatever CSS remains
    .ct-table {
        td {
            &[data-label=Owner], &[data-label=CPU], &[data-label=Memory], &[data-label="Disk space"], &[data-label="Used by"] {
                white-space: nowrap;
            }

            &[data-label=Owner], &[data-label=CPU], &[data-label=Memory], &[data-label="Disk space"], &[data-label="Created"] {
                text-align: right;
            }

            &[data-label=CPU] {
                min-width: 6ch;
            }

            &[data-label=Memory] {
                min-width: 14ch;
            }
        }
    }
}

/* PatternFly workarounds */
.pf-l-flex {
    /* PF spacer should be implemented with gap, not a margin hack */
    // https://github.com/patternfly/patternfly/issues/4523
    // https://github.com/cockpit-project/cockpit/pull/17043
    gap: var(--pf-l-flex--spacer-base);

    > * {
        margin-right: unset;
    }

    /* Flex should ignore empty blocks in the flow */
    // Ideally: Do not render empty children in JSX
    > :empty {
        display: none;
    }
}
